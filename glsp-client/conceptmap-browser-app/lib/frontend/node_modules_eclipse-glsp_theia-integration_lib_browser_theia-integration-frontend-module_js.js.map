{"version":3,"file":"node_modules_eclipse-glsp_theia-integration_lib_browser_theia-integration-frontend-module_js.js","mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;;;;kFAckF;AAClF,sHAAqD;AACrD,yGAA8F;AAC9F,yHAKiC;AACjC,qIAA+D;AAC/D,6HAA6C;AAC7C,oLAAoE;AACpE,8LAAwE;AACxE,2LAA8G;AAC9G,0MAAqG;AACrG,4NAA0F;AAC1F,iMAAoH;AACpH,0MAAsF;AACtF,wLAA+F;AAC/F,oLAAoE;AACpE,0LAAwE;AACxE,yMAA4E;AAC5E,iOAAgG;AAEhG,qBAAe,IAAI,2BAAe,CAAC,CAAC,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,EAAE;IACjE,MAAM,OAAO,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC;IAClD,wBAAwB;IACxB,mCAAwB,EAAC,IAAI,EAAE,iDAAsB,CAAC,CAAC;IACvD,0BAAa,EAAC,OAAO,EAAE,yCAA+B,EAAE,qDAAwB,CAAC,CAAC;IAClF,IAAI,CAAC,iDAAsB,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IACzD,IAAI,CAAC,yBAAgB,CAAC,OAAO,CAAC;SACzB,cAAc,CAAC,CAAC,EAAE,SAAS,EAAE,EAAE,EAAE,CAAC,qCAA2B,CAAC,WAAW,CAAC,SAAS,EAAE,yBAAgB,CAAC,WAAW,CAAC,CAAC;SACnH,gBAAgB,EAAE,CAAC;IAExB,sBAAsB;IACtB,0BAAa,EAAC,OAAO,EAAE,0BAAmB,EAAE,sDAA8B,CAAC,CAAC;IAC5E,0BAAa,EAAC,OAAO,EAAE,uBAAgB,EAAE,mDAA2B,CAAC,CAAC;IACtE,0BAAa,EAAC,OAAO,EAAE,2BAAiB,EAAE,sDAA4B,CAAC,CAAC;IACxE,0BAAa,EAAC,OAAO,EAAE,gCAAsB,EAAE,2DAAiC,CAAC,CAAC;IAElF,OAAO;IACP,mCAAwB,EAAC,IAAI,EAAE,6CAAoB,CAAC,CAAC;IACrD,mCAAwB,EAAC,IAAI,EAAE,iDAAoB,CAAC,CAAC;IACrD,IAAI,CAAC,oDAAuB,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;IAElF,IAAI,CAAC,+DAA4B,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IAE/D,IAAI,CAAC,6EAAmC,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IACtE,IAAI,CAAC,2DAA8B,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE;QACvD,MAAM,SAAS,GAAG,GAAG,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;QAC9C,SAAS,CAAC,IAAI,CAAC,yDAAuB,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;QACpE,OAAO,SAAS,CAAC,GAAG,CAAC,yDAAuB,CAAC,CAAC;IAClD,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,gDAAyB,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE;QAClD,MAAM,SAAS,GAAG,GAAG,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;QAC9C,SAAS,CAAC,IAAI,CAAC,yCAAkB,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;QAC/D,OAAO,SAAS,CAAC,GAAG,CAAC,yCAAkB,CAAC,CAAC;IAC7C,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","sources":["webpack:///../node_modules/@eclipse-glsp/theia-integration/src/browser/theia-integration-frontend-module.ts?"],"sourcesContent":["/********************************************************************************\n * Copyright (c) 2019-2023 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { bindAsService } from '@eclipse-glsp/client';\nimport { CommandContribution, MenuContribution, bindContributionProvider } from '@theia/core';\nimport {\n    FrontendApplicationContribution,\n    KeybindingContext,\n    KeybindingContribution,\n    WebSocketConnectionProvider\n} from '@theia/core/lib/browser';\nimport { ContainerModule } from '@theia/core/shared/inversify';\nimport { GLSPContribution } from '../common';\nimport { DiagramServiceProvider } from './diagram-service-provider';\nimport { DiagramWidgetFactory } from './diagram/diagram-widget-factory';\nimport { GLSPDiagramCommandContribution, GLSPDiagramMenuContribution } from './diagram/glsp-diagram-commands';\nimport { DiagramConfiguration, DiagramContainerFactory } from './diagram/glsp-diagram-configuration';\nimport { GLSPDiagramContextKeyService } from './diagram/glsp-diagram-context-key-service';\nimport { GLSPDiagramKeybindingContext, GLSPDiagramKeybindingContribution } from './diagram/glsp-diagram-keybinding';\nimport { TheiaContextMenuServiceFactory } from './diagram/theia-context-menu-service';\nimport { TheiaMarkerManager, TheiaMarkerManagerFactory } from './diagram/theia-marker-manager';\nimport { GLSPClientContribution } from './glsp-client-contribution';\nimport { GLSPFrontendContribution } from './glsp-frontend-contribution';\nimport { TheiaContextMenuService } from './theia-glsp-context-menu-service';\nimport { TheiaOpenerOptionsNavigationService } from './theia-opener-options-navigation-service';\n\nexport default new ContainerModule((bind, unbind, isBound, rebind) => {\n    const context = { bind, unbind, isBound, rebind };\n    // GLSP Contribution API\n    bindContributionProvider(bind, GLSPClientContribution);\n    bindAsService(context, FrontendApplicationContribution, GLSPFrontendContribution);\n    bind(DiagramServiceProvider).toSelf().inSingletonScope();\n    bind(GLSPContribution.Service)\n        .toDynamicValue(({ container }) => WebSocketConnectionProvider.createProxy(container, GLSPContribution.servicePath))\n        .inSingletonScope();\n\n    // Diagram Command API\n    bindAsService(context, CommandContribution, GLSPDiagramCommandContribution);\n    bindAsService(context, MenuContribution, GLSPDiagramMenuContribution);\n    bindAsService(context, KeybindingContext, GLSPDiagramKeybindingContext);\n    bindAsService(context, KeybindingContribution, GLSPDiagramKeybindingContribution);\n\n    // Misc\n    bindContributionProvider(bind, DiagramWidgetFactory);\n    bindContributionProvider(bind, DiagramConfiguration);\n    bind(DiagramContainerFactory).toFactory(ctx => () => ctx.container.createChild());\n\n    bind(GLSPDiagramContextKeyService).toSelf().inSingletonScope();\n\n    bind(TheiaOpenerOptionsNavigationService).toSelf().inSingletonScope();\n    bind(TheiaContextMenuServiceFactory).toFactory(ctx => () => {\n        const container = ctx.container.createChild();\n        container.bind(TheiaContextMenuService).toSelf().inSingletonScope();\n        return container.get(TheiaContextMenuService);\n    });\n\n    bind(TheiaMarkerManagerFactory).toFactory(ctx => () => {\n        const container = ctx.container.createChild();\n        container.bind(TheiaMarkerManager).toSelf().inSingletonScope();\n        return container.get(TheiaMarkerManager);\n    });\n});\n"],"names":[],"sourceRoot":""}