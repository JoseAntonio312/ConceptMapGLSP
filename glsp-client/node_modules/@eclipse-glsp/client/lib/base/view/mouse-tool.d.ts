import { Disposable, MouseListener, MouseTool, GModelElement, GModelRoot } from '@eclipse-glsp/sprotty';
/**
 * Custom helper type to declare the explicit mouse listener methods
 * of {@link MouseListener} i.e. omitting the `decorate` method.
 */
type MouseListenerMethods = keyof Omit<MouseListener, 'decorate'>;
export declare class GLSPMouseTool extends MouseTool {
    protected mouseListeners: MouseListener[];
    protected rankedMouseListeners: Map<number, MouseListener[]>;
    constructor(mouseListeners?: MouseListener[]);
    register(mouseListener: MouseListener): void;
    registerListener(mouseListener: MouseListener): Disposable;
    deregister(mouseListener: MouseListener): void;
    protected handleEvent<K extends MouseListenerMethods>(methodName: K, model: GModelRoot, event: MouseEvent): void;
    protected notifyListenersByRank<K extends MouseListenerMethods>(element: GModelElement, methodName: K, event: MouseEvent): Promise<void>;
    protected dispatchActions<K extends MouseListenerMethods>(mouseListeners: MouseListener[], methodName: K, element: GModelElement, event: MouseEvent): Promise<void>;
}
export {};
//# sourceMappingURL=mouse-tool.d.ts.map