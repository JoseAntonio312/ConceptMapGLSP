import { Action, Bounds, HoverMouseListener, IActionHandler, ICommand, GModelElement, GModelElementSchema, GModelRootSchema } from '@eclipse-glsp/sprotty';
import { GIssueMarker } from '../validation/issue-marker';
export declare class GlspHoverMouseListener extends HoverMouseListener implements IActionHandler {
    protected enableHover: boolean;
    /**
     * Stops mouse over timer and remove hover feedback, if focus is lost.
     *
     * This fixes strange effects that appear if the mouse left the element via e.g. a context menu,
     * which explicitly removes the focus of the diagram.
     * @see SelectionServiceAwareContextMenuMouseListener
     * @param action should be a `FocusStateChangedAction`
     * @returns a `HoverFeedbackAction` resetting the state, if the specified action indicates lost focus
     */
    handle(action: Action): void | Action | ICommand;
    mouseOver(target: GModelElement, event: MouseEvent): (Action | Promise<Action>)[];
    protected startMouseOverTimer(target: GModelElement, event: MouseEvent): Promise<Action>;
    protected createPopupModel(marker: GIssueMarker, bounds: Bounds): GModelRootSchema;
    protected createMarkerIssuePopup(marker: GIssueMarker): GModelElementSchema;
    protected createIssueMessage(marker: GIssueMarker): string;
    protected modifyBounds(bounds: Bounds): Bounds;
}
//# sourceMappingURL=hover.d.ts.map