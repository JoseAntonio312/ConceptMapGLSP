"use strict";
/********************************************************************************
 * Copyright (c) 2023 Business Informatics Group (TU Wien) and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
exports.configureMoveZoom = exports.moveZoomModule = void 0;
const sprotty_1 = require("@eclipse-glsp/sprotty");
const move_handler_1 = require("./move-handler");
const zoom_handler_1 = require("./zoom-handler");
/**
 * Handles move and zoom actions.
 */
exports.moveZoomModule = new sprotty_1.FeatureModule((bind, unbind, isBound, rebind) => {
    const context = { bind, unbind, isBound, rebind };
    configureMoveZoom(context);
});
function configureMoveZoom(context) {
    context.bind(move_handler_1.MoveViewportHandler).toSelf().inSingletonScope();
    context.bind(move_handler_1.MoveElementHandler).toSelf().inSingletonScope();
    context.bind(zoom_handler_1.ZoomViewportHandler).toSelf().inSingletonScope();
    context.bind(zoom_handler_1.ZoomElementHandler).toSelf().inSingletonScope();
    (0, sprotty_1.configureActionHandler)(context, move_handler_1.MoveViewportAction.KIND, move_handler_1.MoveViewportHandler);
    (0, sprotty_1.configureActionHandler)(context, move_handler_1.MoveElementAction.KIND, move_handler_1.MoveElementHandler);
    (0, sprotty_1.configureActionHandler)(context, zoom_handler_1.ZoomViewportAction.KIND, zoom_handler_1.ZoomViewportHandler);
    (0, sprotty_1.configureActionHandler)(context, zoom_handler_1.ZoomElementAction.KIND, zoom_handler_1.ZoomElementHandler);
}
exports.configureMoveZoom = configureMoveZoom;
//# sourceMappingURL=move-zoom-module.js.map