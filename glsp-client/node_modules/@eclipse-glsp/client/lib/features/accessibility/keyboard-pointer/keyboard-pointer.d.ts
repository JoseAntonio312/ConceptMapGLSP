import { AbstractUIExtension, IActionDispatcher, IActionHandler, GModelRoot, Action, TriggerNodeCreationAction } from '@eclipse-glsp/sprotty';
import { KeyboardPointerKeyboardListener } from './keyboard-pointer-listener';
import { KeyboardPointerPosition } from './keyboard-pointer-position';
import { EditorContextService } from '../../../base/editor-context-service';
export declare class KeyboardPointer extends AbstractUIExtension implements IActionHandler {
    protected readonly actionDispatcher: IActionDispatcher;
    protected _triggerAction: TriggerNodeCreationAction;
    protected position: KeyboardPointerPosition;
    protected keyListener: KeyboardPointerKeyboardListener;
    editorContextService: EditorContextService;
    constructor(actionDispatcher: IActionDispatcher);
    get triggerAction(): TriggerNodeCreationAction;
    get isVisible(): boolean;
    get getPosition(): KeyboardPointerPosition;
    get getKeyListener(): KeyboardPointerKeyboardListener;
    id(): string;
    containerClass(): string;
    protected initializeContents(containerElement: HTMLElement): void;
    protected onBeforeShow(containerElement: HTMLElement, root: Readonly<GModelRoot>, ...selectedElementIds: string[]): void;
    handle(action: Action): Action | void;
    render(): void;
}
//# sourceMappingURL=keyboard-pointer.d.ts.map