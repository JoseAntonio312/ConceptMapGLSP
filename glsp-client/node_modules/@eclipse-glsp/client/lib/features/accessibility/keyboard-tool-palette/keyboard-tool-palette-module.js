"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.configureKeyboardToolPaletteTool = exports.keyboardToolPaletteModule = void 0;
/********************************************************************************
 * Copyright (c) 2023 Business Informatics Group (TU Wien) and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
require("../../../../css/keyboard-tool-palette.css");
const sprotty_1 = require("@eclipse-glsp/sprotty");
const tool_palette_1 = require("../../tool-palette/tool-palette");
const keyboard_tool_palette_1 = require("./keyboard-tool-palette");
const actions_1 = require("../actions");
const tool_1 = require("../../../base/tool-manager/tool");
exports.keyboardToolPaletteModule = new sprotty_1.FeatureModule((bind, unbind, isBound, rebind) => {
    const context = { bind, unbind, isBound, rebind };
    configureKeyboardToolPaletteTool(context);
});
function configureKeyboardToolPaletteTool(context) {
    (0, sprotty_1.bindAsService)(context, sprotty_1.TYPES.IUIExtension, keyboard_tool_palette_1.KeyboardToolPalette);
    context.bind(sprotty_1.TYPES.IDiagramStartup).toService(keyboard_tool_palette_1.KeyboardToolPalette);
    (0, sprotty_1.configureActionHandler)(context, tool_1.EnableDefaultToolsAction.KIND, keyboard_tool_palette_1.KeyboardToolPalette);
    (0, sprotty_1.configureActionHandler)(context, actions_1.FocusDomAction.KIND, keyboard_tool_palette_1.KeyboardToolPalette);
    (0, sprotty_1.configureActionHandler)(context, tool_palette_1.EnableToolPaletteAction.KIND, keyboard_tool_palette_1.KeyboardToolPalette);
}
exports.configureKeyboardToolPaletteTool = configureKeyboardToolPaletteTool;
//# sourceMappingURL=keyboard-tool-palette-module.js.map